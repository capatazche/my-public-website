import { StrictMode} from 'react';
import { createRoot } from 'react-dom/client';
import { createBrowserRouter, RouterProvider } from "react-router-dom";
import { Amplify } from 'aws-amplify';

import type { ReactNode } from 'react';

import './index.css'
import App from './App.tsx'
import HomePage from "./pages/HomePage.tsx";
import ResumePage from "./pages/ResumePage.tsx";

// Configure Amplify with outputs generated by Amplify Gen 2
// Fetch amplify_outputs.json at runtime so builds don't fail if the file isn't present in the repo.
(async () => {
  try {
    const res = await fetch('../amplify_outputs.json', { cache: 'no-store' });
    if (res.ok) {
      const outputs = await res.json();
      Amplify.configure(outputs);
      console.log('Amplify configured');
    } else {
      console.warn('amplify_outputs.json not found at /amplify_outputs.json. Make sure to run `amplify generate outputs` and serve the file from your public root.');
    }
  } catch (e) {
    console.error('Failed to load Amplify outputs:', e);
  }
})();

const router = createBrowserRouter([
    {
        path: '/',
        element: <App /> as ReactNode,
        children: [
            {
                index: true,
                element: <HomePage/> as ReactNode,
            },
            {
                path: 'resume',
                element: <ResumePage /> as ReactNode,
            },
        ],
    },
]);

createRoot(document.getElementById('root')!).render(
  (
    <StrictMode>
      <RouterProvider router={router} />
    </StrictMode>
  ) as ReactNode,
)
